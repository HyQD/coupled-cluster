import coupled_cluster.ccs.rhs_l as ccs_l
import coupled_cluster.ccd.rhs_l as ccd_l


def compute_l_1_amplitudes(
    f, f_t, u_t, t1, t2, l1, l2, o, v, np, intermediates=None, out=None
):
    """
    if out is None:
    out = np.zeros_like(l_1)
    """
    no = t1.shape[1]
    nv = t1.shape[0]  
    
#    print("l1")
#    print(l1/2)
    
    rhs = np.zeros((no, nv), dtype=t1.dtype)
    
 #   I0_l1 = np.zeros((no, no), dtype=t1.dtype)
 #   I0_l1 += np.einsum("ikba,abkj->ij", l2, t2)
    I22_l1 = np.zeros((no, no, no, nv), dtype=t1.dtype)
    I25_l1 = np.zeros((no, no, no, nv), dtype=t1.dtype)
    I30_l1 = np.zeros((no, no), dtype=t1.dtype)
 #   I30_l1 += np.einsum("ij->ij", I0_l1)
  #  rhs -= np.einsum("ij,ja->ia", I0_l1, f_t[o, v])                    #ft(o,v)*l2*t2 
  #  del I0_l1
 #   I1_l1 = np.zeros((no, no, no, no), dtype=t1.dtype)
 #   I1_l1 += np.einsum("ijba,ablk->ijkl", l2, t2)
 #   rhs += np.einsum("ijlk,klja->ia", I1_l1, u_t[o, o, o, v])          #u(o,o,o,v)*l2*t2
 #   del I1_l1
    I31_l1 = np.zeros((no, nv), dtype=t1.dtype)
    I5_l1 = np.zeros((no, no, no, nv), dtype=t1.dtype)
    I6_l1 = np.zeros((no, no, no, nv), dtype=t1.dtype)
    I5_l1 += 2 * np.einsum("jkia->ijka", u_t[o, o, o, v])
    I5_l1 -= np.einsum("kjia->ijka", u_t[o, o, o, v])
    I14_l1 = np.zeros((no, no, no, nv), dtype=t1.dtype)
    #I14_l1 -= np.einsum("kilb,balj->ijka", I5_l1, t2)
    del I5_l1
    I6_l1 += np.einsum("kjia->ijka", u_t[o, o, o, v])
    I14_l1 += np.einsum("klib,ablj->ijka", I6_l1, t2)
    I24_l1 = np.zeros((no, no, no, nv), dtype=t1.dtype)
    I24_l1 += np.einsum("ijlb,ablk->ijka", I6_l1, t2)
    del I6_l1
    I7_l1 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    I7_l1 += 2 * np.einsum("jiab->ijab", u_t[o, o, v, v])
    I7_l1 -= np.einsum("jiba->ijab", u_t[o, o, v, v])
  #  I9_l1 = np.zeros((no, nv), dtype=t1.dtype)
  #  I9_l1 += np.einsum("ia->ia", f_t[o, v])
  #  I14_l1 -= np.einsum("ib,bakj->ijka", I9_l1, t2)
    I35_l1 = np.zeros((no, no), dtype=t1.dtype)
    I14_l1 -= np.einsum("iakj->ijka", u_t[o, v, o, o])
    #I14_l1 -= np.einsum("bcjk,iacb->ijka", t2, u_t[o, v, v, v])
    rhs += np.einsum("ijkb,jkba->ia", I14_l1, l2)                     #l2*(u_t + u_t(o,o,o,v)*t2)
    del I14_l1
 #   I15_l1 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
 #   I15_l1 += np.einsum("ikac,bcjk->ijab", l2, t2)
 #   I15_l1 += np.einsum("ikca,cbjk->ijab", l2, t2)
 #   rhs -= np.einsum("ijbc,jbac->ia", I15_l1, u_t[o, v, v, v])         #2*l2*t2*ut(o,v,v,v)
 #   del I15_l1
    I16_l1 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    I16_l1 += 2 * np.einsum("abji->ijab", t2)
    I16_l1 -= np.einsum("baji->ijab", t2)
    I17_l1 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    #I17_l1 += np.einsum("kjbc,kica->ijab", I16_l1, l2)
    #rhs += np.einsum("ijbc,jbca->ia", I17_l1, u_t[o, v, v, v])         #t2*l2*ut(o,v,v,v)
    del I17_l1
    I31_l1 -= np.einsum("jb,jiab->ia", l1, I16_l1)
    del I16_l1
    I18_l1 = np.zeros((no, nv, nv, nv), dtype=t1.dtype)
    I18_l1 += np.einsum("abic->iabc", u_t[v, v, o, v])
    rhs += np.einsum("jbca,jibc->ia", I18_l1, l2)                     #l2*ut(v,v,o,v)
    del I18_l1
    I19_l1 = np.zeros((no, no, no, nv), dtype=t1.dtype)
    I19_l1 += np.einsum("ib,bakj->ijka", l1, t2)
    I22_l1 -= 2 * np.einsum("ijka->ijka", I19_l1)
    I22_l1 += np.einsum("ikja->ijka", I19_l1)
    del I19_l1
    I20_l1 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    I20_l1 -= np.einsum("abji->ijab", t2)
    I20_l1 += 2 * np.einsum("baji->ijab", t2)
    rhs += np.einsum("ijkb,jkba->ia", I22_l1, u_t[o, o, v, v])        #u(o,o,v,v)(l1*t2)
    del I22_l1
    I35_l1 += np.einsum("kjab,kiab->ij", I20_l1, u_t[o, o, v, v])
    del I20_l1
  #  rhs += np.einsum("jikb,kjab->ia", I24_l1, l2)                      #l2*t2* u_t[o, o, o, v]
    del I24_l1
    #I27_l1 = np.zeros((nv, nv), dtype=t1.dtype)
    #I27_l1 += np.einsum("jica,cbji->ab", l2, t2)
    #I28_l1 = np.zeros((no, nv, nv, nv), dtype=t1.dtype)
    #I28_l1 -= np.einsum("iabc->iabc", u_t[o, v, v, v])
    #I28_l1 += 2 * np.einsum("iacb->iabc", u_t[o, v, v, v])   
 #   rhs += np.einsum("bc,ibca->ia", I27_l1, I28_l1)                    #l2*t2*ut
    rhs -= np.einsum("jb,jiab->ia", I31_l1, I7_l1)                    #(l1*t2)*(u_t[o, o, v, v]) 
   # del I27_l1
    #del I28_l1
    #del I9_l1  
    del I31_l1
    del I7_l1 
    I32_l1 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    I32_l1 += 2 * np.einsum("iabj->ijab", u_t[o, v, v, o])
    I32_l1 -= np.einsum("iajb->ijab", u_t[o, v, o, v])
    rhs += np.einsum("jb,ijba->ia", l1, I32_l1)                       #l1*u_t[o, v, o, v] 
    del I32_l1
 #   I33_l1 = np.zeros((no, no, no, nv), dtype=t1.dtype)
 #   I33_l1 += 2 * np.einsum("ijka->ijka", u_t[o, o, o, v])
 #   I33_l1 -= np.einsum("jika->ijka", u_t[o, o, o, v])
 #   rhs -= np.einsum("jk,kija->ia", I30_l1, I33_l1)  
 #   del I33_l1
    del I30_l1
    I34_l1 = np.zeros((nv, nv), dtype=t1.dtype)
    I34_l1 += np.einsum("ab->ab", f_t[v, v])
    rhs += np.einsum("ba,ib->ia", I34_l1, l1)                         #l1*f_t[v, v]
    del I34_l1
    I35_l1 += np.einsum("ij->ij", f_t[o, o])
    rhs -= np.einsum("ij,ja->ia", I35_l1, l1)                         #l1*(f_t[o, o]+u_t[o, o, v, v]*t2) 
    del I35_l1
   
    rhs += 2 * np.einsum("ia->ia", f_t[o, v])
    rhs = 2 * np.einsum("ia->ia", f_t[o, v])                          # f_t[o, v]   
    
    print("out")
    print(rhs/2)
    
    print("Lambda Singles sorted")
    l_1_print = np.sort(abs(l1.flatten()))[::-1]        
    print(l_1_print/2)
    
    return rhs
    

def compute_l_2_amplitudes(
    f, f_t, u_t, t1, t2, l1, l2, o, v, np, intermediates=None, out=None
):
    """
    if out is None:
        out = np.zeros_like(l_2)
    """
    no = t1.shape[1]
    nv = t1.shape[0]
    I0_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    I0_l2 += np.einsum("ca,jicb->ijab", f[v, v], l2) 
    I15_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    I15_l2 -= np.einsum("ijab->ijab", I0_l2) #2
    del I0_l2
    I1_l2 = np.zeros((no, no, no, nv), dtype=t1.dtype)
    I52_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    I54_l2 = np.zeros((no, no, no, no), dtype=t1.dtype)
    I7_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    I6_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    #I6_l2 += np.einsum("acki,jkcb->ijab", t2, u_t[o, o, v, v])
    I7_l2 -= np.einsum("ijab->ijab", I6_l2)
    del I6_l2
    I7_l2 += np.einsum("jaib->ijab", u_t[o, v, o, v])
    I8_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    I8_l2 += np.einsum("kica,kjbc->ijab", I7_l2, l2)
   # I15_l2 += np.einsum("jiba->ijab", I8_l2)
    del I8_l2
    I37_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    I37_l2 += np.einsum("kica,kjcb->ijab", I7_l2, l2)
    del I7_l2
    I52_l2 += np.einsum("jiba->ijab", I37_l2)
    del I37_l2
    I10_l2 = np.zeros((no, no, no, nv), dtype=t1.dtype)
    I24_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    I53_l2 = np.zeros((no, no, no, no), dtype=t1.dtype)
    I10_l2 += np.einsum("kjia->ijka", u_t[o, o, o, v])
    I35_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    del I10_l2
    I12_l2 = np.zeros((no, no), dtype=t1.dtype)
    I13_l2 = np.zeros((no, no), dtype=t1.dtype)
    #I13_l2 += np.einsum("ij->ij", I12_l2)
    del I12_l2
    I13_l2 += np.einsum("ij->ij", f[o, o])
    I14_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    I14_l2 += np.einsum("ik,kjab->ijab", I13_l2, l2)
    del I13_l2
    I15_l2 += np.einsum("ijba->ijab", I14_l2) #3
    del I14_l2
    rhs = np.zeros((no, no, nv, nv), dtype=t1.dtype)
#!    rhs -= np.einsum("ijba->ijab", I15_l2)
#!    rhs -= np.einsum("jiab->ijab", I15_l2)
    del I15_l2
    I16_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    I16_l2 += np.einsum("ic,jcab->ijab", l1, u_t[o, v, v, v])#############Need
    I24_l2 -= np.einsum("ijab->ijab", I16_l2)
    del I16_l2
    I18_l2 = np.zeros((nv, nv), dtype=t1.dtype)
   # I18_l2 += np.einsum("jica,cbji->ab", l2, t2)
    I19_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    #I19_l2 += np.einsum("ac,jicb->ijab", I18_l2, u_t[o, o, v, v])
    del I18_l2
   # I24_l2 += np.einsum("ijab->ijab", I19_l2)
    del I19_l2
    I22_l2 = np.zeros((no, no), dtype=t1.dtype)
    I21_l2 = np.zeros((no, no), dtype=t1.dtype)
    #I21_l2 += np.einsum("ikba,abkj->ij", l2, t2)
    #I22_l2 += np.einsum("ij->ij", I21_l2)
    #del I21_l2
    I23_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    #I23_l2 += np.einsum("ik,kjab->ijab", I22_l2, u_t[o, o, v, v])
    #del I22_l2
   # I24_l2 += np.einsum("ijba->ijab", I23_l2)
    #del I23_l2
#!    rhs += np.einsum("ijab->ijab", I24_l2)
#!    rhs -= 2 * np.einsum("ijba->ijab", I24_l2)
#!    rhs -= 2 * np.einsum("jiab->ijab", I24_l2)
#!    rhs += np.einsum("jiba->ijab", I24_l2)
    del I24_l2
    I25_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    I25_l2 += np.einsum("ka,ijkb->ijab", l1, u_t[o, o, o, v])
    I35_l2 += np.einsum("ijab->ijab", I25_l2) #4
    del I25_l2
    I30_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    I27_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    I27_l2 += np.einsum("caki,jkcb->ijab", t2, u_t[o, o, v, v])
    I30_l2 -= np.einsum("ijab->ijab", I27_l2)
    del I27_l2
    I28_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    I28_l2 += 2 * np.einsum("abji->ijab", t2)
    I28_l2 -= np.einsum("baji->ijab", t2)
    I29_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    I29_l2 += np.einsum("kiac,kjcb->ijab", I28_l2, u_t[o, o, v, v])
    I30_l2 += np.einsum("ijab->ijab", I29_l2)
    del I29_l2
    I39_l2 = np.zeros((nv, nv), dtype=t1.dtype)
    I39_l2 += np.einsum("ijac,ijcb->ab", I28_l2, u_t[o, o, v, v])
    del I28_l2
    I42_l2 = np.zeros((nv, nv), dtype=t1.dtype)
    I42_l2 += np.einsum("ab->ab", I39_l2)
    del I39_l2
    #I30_l2 += np.einsum("jabi->ijab", u_t[o, v, v, o])
    I31_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    #I31_l2 += np.einsum("kica,kjcb->ijab", I30_l2, l2)
    del I30_l2
    #I35_l2 -= np.einsum("jiba->ijab", I31_l2)
    del I31_l2
    I33_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    I33_l2 += 2 * np.einsum("jiab->ijab", u_t[o, o, v, v])
    I33_l2 -= np.einsum("jiba->ijab", u_t[o, o, v, v])
    I34_l2 = np.zeros((no, nv), dtype=t1.dtype)
    del I33_l2
    I49_l2 = np.zeros((no, no), dtype=t1.dtype)
    I35_l2 -= np.einsum("ia,jb->ijab", f_t[o, v], l1) #6
#!    rhs -= 2 * np.einsum("ijab->ijab", I35_l2)
#!    rhs += np.einsum("ijba->ijab", I35_l2)
#!    rhs += np.einsum("jiab->ijab", I35_l2)
#!    rhs -= 2 * np.einsum("jiba->ijab", I35_l2)
    del I35_l2
    I43_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    #I43_l2 += np.einsum("ca,ijcb->ijab", I42_l2, l2)
    del I42_l2
    I52_l2 += np.einsum("jiba->ijab", I43_l2)
    del I43_l2
    I44_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
    #I44_l2 -= np.einsum("abji->ijab", t2)
    #I44_l2 += 2 * np.einsum("baji->ijab", t2)
    I45_l2 = np.zeros((no, no), dtype=t1.dtype)
    I45_l2 += np.einsum("kiab,kjab->ij", I44_l2, u_t[o, o, v, v])
    del I44_l2
    I49_l2 += np.einsum("ji->ij", I45_l2)
    del I45_l2
    I50_l2 = np.zeros((no, no, nv, nv), dtype=t1.dtype)
   # I50_l2 += np.einsum("ik,kjab->ijab", I49_l2, l2)
    del I49_l2
    I52_l2 += np.einsum("jiba->ijab", I50_l2)
    del I50_l2
    #rhs -= np.einsum("ijab->ijab", I52_l2)
    #rhs -= np.einsum("jiba->ijab", I52_l2)
    del I52_l2
    #I53_l2 += np.einsum("jilk->ijkl", u_t[o, o, o, o])
    #I53_l2 += np.einsum("ablk,jiab->ijkl", t2, u_t[o, o, v, v])
    #rhs += np.einsum("jikl,klba->ijab", I53_l2, l2)
    del I53_l2
    #I54_l2 += np.einsum("jiab,ablk->ijkl", l2, t2)
    #rhs += np.einsum("jikl,klba->ijab", I54_l2, u_t[o, o, v, v])
    del I54_l2
    
    #rhs += np.einsum("jicd,dcab->ijab", l2, u_t[v, v, v, v])
    rhs -= 2 * np.einsum("jiab->ijab", u_t[o, o, v, v])  #1
    rhs += 4 * np.einsum("jiba->ijab", u_t[o, o, v, v])  #1  
    
    rhs = np.zeros((no, no, nv, nv), dtype=t1.dtype)


  #  print("Lambda Doubles")
  #  print(l2[0][0])
    
    print("L doubles sorted")      
    l2_print = np.sort(abs(l2.flatten()))[::-1]       
    print(l2_print[0:20]/2)
    
    return rhs
